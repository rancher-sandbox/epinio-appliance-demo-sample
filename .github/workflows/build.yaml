name: Build epinioOS
on:
  schedule:
    - cron:  '0 20 * * *'
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - "master"
jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - flavor: "opensuse"
    #     - flavor: "fedora"
    env:
      FLAVOR: ${{ matrix.flavor }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - run: |
        git fetch --prune --unshallow

    - name: setup-docker
      uses: docker-practice/actions-setup-docker@master

    # We patch docker to use all the HD available in GH action free runners
    - name: Patch Docker Daemon data-root
      run: |
        DOCKER_DATA_ROOT='/mnt/var/lib/docker'
        DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
        sudo mkdir -p "${DOCKER_DATA_ROOT}"
        jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
        sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
        sudo systemctl restart docker

    - name: Login to DockerHub Registry
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Set Push options
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo "BUILD_ARGS=--push --no-spinner --live-output --only-target-package --pull" >> $GITHUB_ENV

    - name: Install deps
      run: |
        sudo -E make deps

    - name: Build packages ðŸ”§
      run: |
        sudo -E make build
        ls -liah $PWD/build

    - name: Create repo
      run: |
        sudo -E make create-repo
    - name: Upload results
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.flavor }}
        path: build
    - name: Upload signing logs
      uses: actions/upload-artifact@v2
      with:
        name: sign-${{ matrix.flavor }}
        path: /tmp/sign_images.log

  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    needs: build
    strategy:
      matrix:
       include:
         - flavor: "opensuse"
    #     - flavor: "fedora"
    env:
      FLAVOR: ${{ matrix.flavor }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Download result for build
      uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.flavor }}
        path: build
    
    - run: |
        git fetch --prune --unshallow

    - name: setup-docker
      uses: docker-practice/actions-setup-docker@master

    # We patch docker to use all the HD available in GH action free runners
    - name: Patch Docker Daemon data-root
      run: |
        DOCKER_DATA_ROOT='/mnt/var/lib/docker'
        DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
        sudo mkdir -p "${DOCKER_DATA_ROOT}"
        jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
        sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
        sudo systemctl restart docker

    - name: Login to DockerHub Registry
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    
    - name: Set Push options
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo "BUILD_ARGS=--push --only-target-package --pull" >> $GITHUB_ENV

    - name: Install deps
      run: |
        sudo -E make deps

    - name: Publish to DockerHub ðŸš€
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        sudo -E make publish-repo
    - name: Upload signing logs
      uses: actions/upload-artifact@v2
      with:
        name: sign-${{ matrix.flavor }}
        path: /tmp/sign_images.log

  iso:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
       include:
         - flavor: "opensuse"
         #- flavor: "fedora"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Download result for build
      uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.flavor }}
        path: build
    
    - name: Install deps
      run: |
        sudo apt-get update
        sudo apt-get install -y xorriso squashfs-tools
        sudo -E make deps

    - name: Build ISO from local build ðŸ”§
      run: |
        sudo -E make iso

    - uses: actions/upload-artifact@v2
      with:
        name: epinioOS-${{ matrix.flavor }}.iso.zip
        path: |
          *.iso
          *.sha256
